class Snake {
  // properties for the snake's position, size, and direction
  List<Point> body;
  int direction;

  // initialize the snake's starting position and size
  Snake() {
    body = [Point(x: 10, y: 10)];
    direction = RIGHT;
  }

  // move the snake in its current direction
  void move() {
    // add a new Point to the front of the snake's body in the current direction
    body.insert(0, Point(x: body[0].x + dx[direction], y: body[0].y + dy[direction]));

    // remove the last Point from the snake's body
    body.removeLast();
  }

  // grow the snake by adding a Point to the end of its body
  void grow() {
    body.add(Point(x: body[body.length - 1].x, y: body[body.length - 1].y));
  }

  // draw the snake on the canvas
  void draw(Canvas canvas) {
    // loop through the snake's body and draw each Point
    for (Point p in body) {
      canvas.drawRect(Rect.fromLTWH(p.x * size, p.y * size, size, size), paint);
    }
  }
}

class Game {
  // properties for the game board, snake, and food
  List<List<int>> board;
  Snake snake;
  Point food;

  // initialize the game board, snake, and food
  Game() {
    board = List.generate(width, (_) => List(height), growable: false);
    snake = Snake();
    food = Point(x: 20, y: 20);
  }

  // update the game state
  void update() {
    snake.move();

    // check if the snake has collided with the wall or itself
    if (snake.body[0].x < 0 || snake.body[0].x >= width || snake.body[0].y < 0 || snake.body[0].y >= height || board[snake.body[0].x][snake.body[0].y] == 1) {
      // game over
    }

    // check if the snake has eaten the food
    if (snake.body[0].x == food.x && snake.body[0].y == food.y) {
      snake.grow();
      food = Point(x: Random().nextInt(width), y: Random().nextInt(height));
    }

    // update the board
    for (int i = 0; i < width; i++) {
      for (int j = 0; j < height; j++) {
        board[i][j] = 0;
      }
    }
    for (Point p in snake.body) {
      board[p.x][p.y] = 1;
    }
  }

  // draw the game on the canvas
  void draw(Canvas canvas) {
    // draw the snake and food
    snake.draw(canvas);
    canvas.drawRect(Rect.fromLTWH(food.x * size, food.y * size, size, size), paint);
  }
}
